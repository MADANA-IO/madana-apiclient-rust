/*
 * madana-api
 *
 * <h1>API Quickstart Guide</h1>        <p>This documentation contains a Quickstart Guide, a few <a href=\"downloads.html\">sample clients</a>  for download and information about the available  <a href=\"resources.html\">endpoints</a>  and  <a href=\"data.html\">DataTypes</a>  </p>     <p>The <a target=\"_blank\" href=\"http://madana-explorer-staging.eu-central-1.elasticbeanstalk.com/login\">  MADANA Explorer</a> can be used to verify the interactions with the API</p>           <p>Internal use only. For more information visit <a href=\"https://www.madana.io\">www.madana.io</a></p>         <br> <br>
 *
 * The version of the OpenAPI document: 0.4.12
 * 
 * Generated by: https://openapi-generator.tech
 */

/// JsonNodeInfo : 



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct JsonNodeInfo {
    /// 
    #[serde(rename = "hardwareBaseboard", skip_serializing_if = "Option::is_none")]
    pub hardware_baseboard: Option<String>,
    /// 
    #[serde(rename = "publicKey", skip_serializing_if = "Option::is_none")]
    pub public_key: Option<String>,
    /// 
    #[serde(rename = "memory", skip_serializing_if = "Option::is_none")]
    pub memory: Option<String>,
    /// 
    #[serde(rename = "processors", skip_serializing_if = "Option::is_none")]
    pub processors: Option<Vec<String>>,
    /// 
    #[serde(rename = "cpuLogicalCount", skip_serializing_if = "Option::is_none")]
    pub cpu_logical_count: Option<i32>,
    /// 
    #[serde(rename = "connectionURL", skip_serializing_if = "Option::is_none")]
    pub connection_url: Option<String>,
    /// 
    #[serde(rename = "operatingSystem", skip_serializing_if = "Option::is_none")]
    pub operating_system: Option<String>,
    /// 
    #[serde(rename = "cpuPhysicalCores", skip_serializing_if = "Option::is_none")]
    pub cpu_physical_cores: Option<i32>,
    /// 
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    /// 
    #[serde(rename = "operatingSystemUptime", skip_serializing_if = "Option::is_none")]
    pub operating_system_uptime: Option<f32>,
    /// 
    #[serde(rename = "cpuModel", skip_serializing_if = "Option::is_none")]
    pub cpu_model: Option<String>,
    /// 
    #[serde(rename = "owner", skip_serializing_if = "Option::is_none")]
    pub owner: Option<String>,
    /// 
    #[serde(rename = "cpuFamily", skip_serializing_if = "Option::is_none")]
    pub cpu_family: Option<String>,
    /// 
    #[serde(rename = "cpuFrequency", skip_serializing_if = "Option::is_none")]
    pub cpu_frequency: Option<String>,
    /// 
    #[serde(rename = "hardwareFirmware", skip_serializing_if = "Option::is_none")]
    pub hardware_firmware: Option<String>,
}

impl JsonNodeInfo {
    /// 
    pub fn new() -> JsonNodeInfo {
        JsonNodeInfo {
            hardware_baseboard: None,
            public_key: None,
            memory: None,
            processors: None,
            cpu_logical_count: None,
            connection_url: None,
            operating_system: None,
            cpu_physical_cores: None,
            status: None,
            operating_system_uptime: None,
            cpu_model: None,
            owner: None,
            cpu_family: None,
            cpu_frequency: None,
            hardware_firmware: None,
        }
    }
}


